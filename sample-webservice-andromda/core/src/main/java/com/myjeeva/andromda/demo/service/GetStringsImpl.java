// license-header java merge-point
/* Autogenerated on 07/13/2012 18:42:37+0530 by AndroMDA!
 *
 * TEMPLATE:    jaxws\WebServiceMethodImpl.vsl in andromda-webservices-cartridge
 * MODEL CLASS: AndroMDAModel::com.myjeeva.andromda.demo::service::SampleService::getStrings
 * STEREOTYPE:  WebService on SampleService
*/
package com.myjeeva.andromda.demo.service;

import com.myjeeva.andromda.demo.vo.Strings;

/**
 * WebService Service Method Implementation for the SampleService
 * service org.andromda.cartridges.webservice.metafacades.WebServiceOperationLogicImpl[com.myjeeva.andromda.demo.service.SampleService.getStrings].
 * 
 */

public class GetStringsImpl
{
    /**
     * Constructor
     */
    public GetStringsImpl()
    {
        //Documented empty code block - avoid compiler warning
    }

    /**
     * Delegate for TestCase SampleServiceWSDelegateTest and SampleServiceSEIImplTest
     */
    public static void getStringsSetUp()
    {
        // Insert your custom code here for additional required unit test case setup for service method
    }

    /**
     * Delegate for TestCase SampleServiceWSDelegateTest and SampleServiceSEIImplTest
     */
    public static void getStringsTearDown()
    {
        // Insert your custom code here for additional required unit test case tear down for service method
    }

   /**
    * Transforms the getStrings service method parameters on SampleService.
    * 
    * @param optional datatype.String multiplicity=0..1
    * @param required datatype.String multiplicity=1..1
    * Replace void with transformed type, use target.set() values to create transformation
    */
    public static void getStringsTransformInput(
        final String optional
        , final String required
    )
    {

        if (optional != null)
        {
            // transform(String);
        }

        if (required != null)
        {
            // transform(String);
        }
    }

   /**
    * Transforms input to an output response for getStrings service method on SampleService.
    * 
    * @return getStringsResponse Strings
    */
    public static Strings getStringsTransformResponse(String optional, String required)
        // throws TransformationException?
    {
        Strings rtn = new Strings();
        rtn.setOptional("This is optional value " + optional);
        rtn.setRequired("This is required value " + required);

        return rtn;
    }

    /** Create input test data for SampleService getStrings
     * Used by webservice WSClient (against service) and core service WSDelegateTest (against implementation).
     * Return wrapped parameters:
     * optional: String
     * required: String
     * @return getStringsReturn GetStrings WS Input parameter wrapper (assumes wrapped WSDL)
     **/
    public static GetStrings getStringsCreateInput()
    {
        GetStrings getStringsReturn = new GetStrings();

        // parameter1 optionalParam1 with 0 properties:
        String optionalParam1 = "optional";
        getStringsReturn.setOptional(optionalParam1);

        // parameter2 requiredParam2 with 0 properties:
        String requiredParam2 = "required";
        getStringsReturn.setRequired(requiredParam2);

        return getStringsReturn;
    }
}